{
  "openapi": "3.0.0",
  "info": {
    "title": "E-Commerce API",
    "version": "1.0.0",
    "description": "Complete API documentation for the E-Commerce platform with Products, Cart, Orders, Users, and Contact management",
    "contact": {
      "name": "API Support"
    }
  },
  "servers": [
    {
      "url": "http://localhost:7000",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "Products",
      "description": "Product management endpoints"
    },
    {
      "name": "Cart",
      "description": "Shopping cart operations (Authentication required)"
    },
    {
      "name": "Orders",
      "description": "Order management endpoints"
    },
    {
      "name": "Users",
      "description": "User authentication and management"
    },
    {
      "name": "Contact",
      "description": "Contact form submissions"
    }
  ],
  "paths": {
    "/products": {
      "get": {
        "tags": ["Products"],
        "summary": "Get all products",
        "description": "Retrieve a list of all available products",
        "responses": {
          "200": {
            "description": "List of products retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": ["Products"],
        "summary": "Create a new product",
        "description": "Add a new product to the inventory",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": ["Products"],
        "summary": "Get product by ID",
        "description": "Retrieve a specific product by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Product found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": ["Products"],
        "summary": "Update a product",
        "description": "Update an existing product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": ["Products"],
        "summary": "Delete a product",
        "description": "Remove a product from the inventory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully"
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/cart": {
      "get": {
        "tags": ["Cart"],
        "summary": "Get all cart items",
        "description": "Retrieve all items in the authenticated user's cart",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Cart items retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CartItemWithSubtotal"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization required"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/cart/add": {
      "post": {
        "tags": ["Cart"],
        "summary": "Add item to cart",
        "description": "Add a new product to the user's shopping cart",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["productId", "quantity"],
                "properties": {
                  "productId": {
                    "type": "string",
                    "description": "ID of the product to add"
                  },
                  "quantity": {
                    "type": "number",
                    "minimum": 1,
                    "description": "Quantity of the product"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Item added to cart successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CartItemWithSubtotal"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing fields or product already in cart"
          },
          "401": {
            "description": "Authorization required"
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/cart/{id}": {
      "get": {
        "tags": ["Cart"],
        "summary": "Get cart item by ID",
        "description": "Retrieve a specific cart item by its ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Cart item ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Cart item found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CartItemWithSubtotal"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization required"
          },
          "404": {
            "description": "Cart item not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/cart/update/{productId}": {
      "put": {
        "tags": ["Cart"],
        "summary": "Update cart item quantity",
        "description": "Update the quantity of a product in the cart",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["quantity"],
                "properties": {
                  "quantity": {
                    "type": "number",
                    "minimum": 1,
                    "description": "New quantity"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cart item updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CartItemWithSubtotal"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Quantity must be greater than 0"
          },
          "401": {
            "description": "Authorization required"
          },
          "404": {
            "description": "Cart item not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/cart/remove/{productId}": {
      "delete": {
        "tags": ["Cart"],
        "summary": "Remove item from cart",
        "description": "Remove a product from the user's cart",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product ID to remove"
          }
        ],
        "responses": {
          "200": {
            "description": "Cart item removed successfully"
          },
          "401": {
            "description": "Authorization required"
          },
          "404": {
            "description": "Cart item not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/order": {
      "get": {
        "tags": ["Orders"],
        "summary": "Get all orders",
        "description": "Retrieve all orders in the system",
        "responses": {
          "200": {
            "description": "Orders retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Order"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": ["Orders"],
        "summary": "Create a new order",
        "description": "Create an order from all items currently in the cart. This will clear the cart after successful order creation.",
        "responses": {
          "201": {
            "description": "Order placed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Order"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Cart is empty or invalid products"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/order/{id}": {
      "get": {
        "tags": ["Orders"],
        "summary": "Get order by ID",
        "description": "Retrieve a specific order by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Order ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Order found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Order"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": ["Orders"],
        "summary": "Cancel an order",
        "description": "Delete/cancel an order by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Order ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Order cancelled successfully"
          },
          "404": {
            "description": "Order not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api_v1/user/userRegistration": {
      "post": {
        "tags": ["Users"],
        "summary": "Register a new user",
        "description": "Create a new user account (signin)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["username", "email", "password"],
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "Username"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "User password"
                  },
                  "userRole": {
                    "type": "string",
                    "enum": ["user", "admin"],
                    "default": "user",
                    "description": "User role"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string",
                      "description": "JWT access token"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "User already exists or invalid data"
          }
        }
      }
    },
    "/api_v1/user/login": {
      "post": {
        "tags": ["Users"],
        "summary": "Login user",
        "description": "Authenticate a user and receive a JWT token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string",
                      "description": "JWT access token"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "userRole": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "User not found"
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/api_v1/user/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users",
        "description": "Retrieve all users (passwords and tokens excluded)",
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error fetching users"
          }
        }
      }
    },
    "/api_v1/user/send-otp": {
      "post": {
        "tags": ["Users"],
        "summary": "Send password reset OTP",
        "description": "Generate and send a 6-digit OTP to the user's email for password reset",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Email is required"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Error sending OTP"
          }
        }
      }
    },
    "/api_v1/user/reset-password": {
      "post": {
        "tags": ["Users"],
        "summary": "Reset password with OTP",
        "description": "Verify OTP and reset user password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "otp", "newPassword"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "otp": {
                    "type": "string",
                    "description": "6-digit OTP received via email"
                  },
                  "newPassword": {
                    "type": "string",
                    "format": "password",
                    "minLength": 6,
                    "description": "New password (minimum 6 characters)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successful"
          },
          "400": {
            "description": "Invalid or expired OTP, or password too short"
          },
          "500": {
            "description": "Error resetting password"
          }
        }
      }
    },
    "/api_v1/contact": {
      "post": {
        "tags": ["Contact"],
        "summary": "Submit contact form",
        "description": "Submit a contact message. An email notification will be sent to the admin.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "email", "message"],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Contact person's name"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Contact person's email"
                  },
                  "phone": {
                    "type": "string",
                    "description": "Contact person's phone (optional)"
                  },
                  "message": {
                    "type": "string",
                    "description": "Contact message"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contact message saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "contact": {
                      "$ref": "#/components/schemas/Contact"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Name, email, and message are required"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Enter your JWT token from login/registration"
      }
    },
    "schemas": {
      "Product": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Product ID"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "category": {
            "type": "string"
          }
        }
      },
      "ProductInput": {
        "type": "object",
        "required": ["name", "price", "description"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Wireless Headphones"
          },
          "price": {
            "type": "number",
            "example": 99.99
          },
          "description": {
            "type": "string",
            "example": "High-quality wireless headphones with noise cancellation"
          },
          "imageUrl": {
            "type": "string",
            "example": "https://example.com/image.jpg"
          },
          "category": {
            "type": "string",
            "example": "Electronics"
          }
        }
      },
      "CartItem": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "quantity": {
            "type": "number",
            "minimum": 1
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CartItemWithSubtotal": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CartItem"
          },
          {
            "type": "object",
            "properties": {
              "subtotal": {
                "type": "number",
                "description": "Calculated as product price × quantity"
              },
              "productId": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        ]
      },
      "Order": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "productId": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/Product"
                    }
                  ]
                },
                "quantity": {
                  "type": "number"
                }
              }
            }
          },
          "totalPrice": {
            "type": "number"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "userRole": {
            "type": "string",
            "enum": ["user", "admin"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Contact": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  }
}